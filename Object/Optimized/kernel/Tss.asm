; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	C:\Users\cex123\Desktop\XXXXX\osdev\osdev-216\Source\Kernel\BootLoad\Intel\Tss.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

EXTRN	_stosd:PROC
EXTRN	_ltr:PROC
PUBLIC	_EnableTss
PUBLIC	_InstallTss
; Function compile flags: /Ogspy
; File c:\users\cex123\desktop\xxxxx\osdev\osdev-216\source\kernel\bootload\intel\tss.c
_TEXT	SEGMENT
_base$ = 8						; size = 4
_size$ = 12						; size = 4
_InstallTss PROC

; 16   : bool InstallTss(u8 *base, u32 size) {

	push	esi

; 17   :     CTss *tss = (CTss*)base;
; 18   :     stosd(tss, 0, sizeof(CTss)/4);

	mov	esi, DWORD PTR _base$[esp]
	push	edi
	push	26					; 0000001aH
	push	0
	push	esi
	call	_stosd

; 19   :     tss->esp0   = (u32)Monitor->GetBase('STAK')+4*KB;

	mov	eax, DWORD PTR _Monitor
	push	1398030667				; 5354414bH
	call	DWORD PTR [eax+24]
	mov	edi, 4096				; 00001000H
	add	eax, edi
	mov	DWORD PTR [esi+4], eax

; 20   :     tss->esp    = (u32)Monitor->GetBase('TOPS')+4*KB;

	mov	eax, DWORD PTR _Monitor
	push	1414484051				; 544f5053H
	call	DWORD PTR [eax+24]
	add	eax, edi
	mov	DWORD PTR [esi+56], eax

; 21   :     tss->cr3    = (u32)Monitor->GetBase('PAGE');

	mov	eax, DWORD PTR _Monitor
	push	1346455365				; 50414745H
	call	DWORD PTR [eax+24]
	add	esp, 24					; 00000018H
	mov	DWORD PTR [esi+28], eax

; 22   :     tss->ss0    = RING0_DATA;

	mov	DWORD PTR [esi+8], 16			; 00000010H

; 23   :     tss->ss     = RING3_DATA;
; 24   :     tss->cs     = RING3_CODE;

	mov	DWORD PTR [esi+76], 27			; 0000001bH

; 25   :     tss->ds     = RING3_DATA;
; 26   :     tss->es     = RING3_DATA;
; 27   :     tss->fs     = RING3_DATA;
; 28   :     tss->gs     = RING3_DATA;
; 29   :     tss->eflags = EFLAGS_IOPL + EFLAGS_IF;

	mov	DWORD PTR [esi+36], 12800		; 00003200H
	push	35					; 00000023H
	pop	eax
	mov	DWORD PTR [esi+80], eax
	mov	DWORD PTR [esi+84], eax
	mov	DWORD PTR [esi+72], eax
	mov	DWORD PTR [esi+88], eax
	mov	DWORD PTR [esi+92], eax

; 30   :     return true;

	xor	eax, eax
	pop	edi
	inc	eax
	pop	esi

; 31   : }

	ret	0
_InstallTss ENDP
_TEXT	ENDS
; Function compile flags: /Ogspy
; File c:\users\cex123\desktop\xxxxx\osdev\osdev-216\source\kernel\bootload\intel\tss.c
_TEXT	SEGMENT
_base$ = 8						; size = 4
_size$ = 12						; size = 4
_EnableTss PROC

; 34   :     ltr(RING3_TASK); // load task register with ring3 task

	push	59					; 0000003bH
	call	_ltr

; 35   :     return true;

	xor	eax, eax
	pop	ecx
	inc	eax

; 36   : }

	ret	0
_EnableTss ENDP
_TEXT	ENDS
END
