; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	C:\Users\cex123\Desktop\XXXXX\osdev\osdev-211\Source\Applications\DemoFrameWork.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	__fltused:DWORD
_DATA	ENDS
PUBLIC	_OnQuit
PUBLIC	_WindowProc
PUBLIC	_main
PUBLIC	_start
EXTRN	_DemoSetup:PROC
EXTRN	_DemoEffect:PROC
EXTRN	__imp__Thread:DWORD
EXTRN	__imp__Canvas:DWORD
EXTRN	__imp__Window:DWORD
EXTRN	__imp__Event:DWORD
_BSS	SEGMENT
?evt@?3??main@@9@9 DB 080H DUP (?)			; `main'::`4'::evt
_BSS	ENDS
; Function compile flags: /Ogtpy
; File c:\users\cex123\desktop\xxxxx\osdev\osdev-211\source\applications\demoframework.c
_TEXT	SEGMENT
_start	PROC

; 51   :     Thread->Exit(main());

	mov	eax, DWORD PTR __imp__Thread
	push	esi
	mov	esi, DWORD PTR [eax]
	call	_main
	push	eax
	mov	eax, DWORD PTR [esi+28]
	call	eax
	add	esp, 4
	pop	esi

; 52   : }

	ret	0
_start	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\cex123\desktop\xxxxx\osdev\osdev-211\source\applications\demoframework.c
_TEXT	SEGMENT
_main	PROC

; 25   :     CWindow *frame = Window->Create(nullptr, WindowProc);

	mov	eax, DWORD PTR __imp__Window
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR [eax]
	push	OFFSET _WindowProc
	push	0
	mov	eax, DWORD PTR [eax+8]
	call	eax
	mov	edi, eax
	add	esp, 8

; 26   :     if (!frame) return -1;

	test	edi, edi
	jne	SHORT $LN6@main

; 44   :     }
; 45   :     return 0;
; 46   : }

	pop	edi
	pop	esi
	or	eax, -1
	pop	ebx
	ret	0
$LN6@main:

; 27   :     DemoSetup(frame);

	push	edi
	call	_DemoSetup

; 28   : 
; 29   :     CCanvas *canvas = frame->Canvas;
; 30   :     CWindow *parent = frame->Parent;
; 31   :     Window->Redraw(parent);

	mov	eax, DWORD PTR __imp__Window
	mov	esi, DWORD PTR [edi+32]
	mov	ebx, DWORD PTR [edi+36]
	push	esi
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+40]
	call	eax

; 32   :     Canvas->Flip(canvas);

	mov	eax, DWORD PTR __imp__Canvas
	push	ebx
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+60]
	call	eax

; 33   :     Window->Redraw(parent);

	mov	eax, DWORD PTR __imp__Window
	push	esi
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+40]
	call	eax

; 34   :     Canvas->Flip(canvas);

	mov	eax, DWORD PTR __imp__Canvas
	push	ebx
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+60]
	call	eax
	add	esp, 20					; 00000014H

; 35   : 
; 36   :     for (int t = 0;; t++) {

	xor	esi, esi
	npad	5
$LL2@main:

; 37   :         static CEvent evt;
; 38   :         while (Event->PeekEvent(&evt)) {

	mov	eax, DWORD PTR __imp__Event
	push	OFFSET ?evt@?3??main@@9@9
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+16]
	call	eax
	add	esp, 4
	test	eax, eax
	je	SHORT $LN1@main

; 39   :             Event->HandleEvent(&evt);

	mov	eax, DWORD PTR __imp__Event
	push	OFFSET ?evt@?3??main@@9@9
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+20]
	call	eax
	add	esp, 4

; 40   :         }

	jmp	SHORT $LL2@main
$LN1@main:

; 41   :         DemoEffect(frame, t);

	push	esi
	push	edi
	call	_DemoEffect

; 42   :         Canvas->Flip(canvas);

	mov	eax, DWORD PTR __imp__Canvas
	push	ebx
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+60]
	call	eax

; 43   :         Thread->Yield();

	mov	eax, DWORD PTR __imp__Thread
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+24]
	call	eax
	inc	esi
	jmp	SHORT $LL2@main
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\cex123\desktop\xxxxx\osdev\osdev-211\source\applications\demoframework.c
_TEXT	SEGMENT
_win$ = 8						; size = 4
_evt$ = 12						; size = 4
_WindowProc PROC

; 18   :     switch (evt->Code) {

	mov	eax, DWORD PTR _evt$[esp-4]
	cmp	DWORD PTR [eax+16], 10			; 0000000aH
	jne	SHORT $LN8@WindowProc

; 19   :     case EVT_ONKEYUP: return OnQuit(win, evt); 

	mov	eax, DWORD PTR __imp__Thread
	push	0
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+28]
	call	eax
	add	esp, 4
$LN8@WindowProc:
	mov	eax, 1

; 20   :     }
; 21   :     return true;
; 22   : }

	ret	0
_WindowProc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\cex123\desktop\xxxxx\osdev\osdev-211\source\applications\demoframework.c
_TEXT	SEGMENT
_win$ = 8						; size = 4
_evt$ = 12						; size = 4
_OnQuit	PROC

; 13   :     Thread->Exit(0);

	mov	eax, DWORD PTR __imp__Thread
	push	0
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+28]
	call	eax
	add	esp, 4

; 14   :     return true;

	mov	eax, 1

; 15   : }

	ret	0
_OnQuit	ENDP
_TEXT	ENDS
END
